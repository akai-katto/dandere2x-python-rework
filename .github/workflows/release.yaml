name: GitHubActionsBuilds

on: push

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

  build_windows:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install PyInstaller
        run: pip3 install pyinstaller
      - name: Pip install requirements
        run: pip3 install -r requirements.txt
      - name: Build to single executable
        run: |
          pyinstaller --onefile gui_driver.py
      - name: rename executable
        run: |
          Move-Item dist\gui_driver.exe dist\dandere2x.exe
      - name: download waifu2x-ncnn-vulkan-server and move to dist\externals
        run: |
          Invoke-WebRequest -Uri https://github.com/akai-katto/waifu2x-ncnn-vulkan-server/releases/download/0.1.3/waifu2x-ncnn-vulkan-0.1.3-windows.zip -OutFile waifu2x-ncnn-vulkan.zip
          Expand-Archive waifu2x-ncnn-vulkan.zip -DestinationPath waifu2x-ncnn-vulkan
          mkdir D:\a\dandere2x-python-rework\dandere2x-python-rework\dist\externals\
          Move-Item D:\a\dandere2x-python-rework\dandere2x-python-rework\waifu2x-ncnn-vulkan\waifu2x-ncnn-vulkan-0.1.3-windows D:\a\dandere2x-python-rework\dandere2x-python-rework\dist\externals\waifu2x-ncnn-vulkan-server

      - name: Download ffmpeg and ffprobe and move to dist\externals
        run: |
          Invoke-WebRequest -Uri https://github.com/ffbinaries/ffbinaries-prebuilt/releases/download/v4.4.1/ffmpeg-4.4.1-win-64.zip -OutFile ffmpeg-4.4.1-win-64.zip
          Expand-Archive ffmpeg-4.4.1-win-64.zip D:\a\dandere2x-python-rework\dandere2x-python-rework\dist\externals\
          Invoke-WebRequest -Uri https://github.com/ffbinaries/ffbinaries-prebuilt/releases/download/v4.4.1/ffprobe-4.4.1-win-64.zip -OutFile ffprobe-4.4.1-win-64.zip
          Expand-Archive ffprobe-4.4.1-win-64.zip D:\a\dandere2x-python-rework\dandere2x-python-rework\dist\externals\
      - name: copy config_files and gui_icons over
        run: |
          Move-Item config_files\ dist\config_files\
          mkdir dist\gui\
          Move-Item gui\icons dist\gui\icons
      - name: Download sample video and create workspace
        run: |
          Invoke-WebRequest -Uri https://github.com/akai-katto/dandere2x_externals_static/releases/download/0.02/yn_moving.mkv -OutFile yn_moving.mkv
          mkdir dist\workspace
          Move-Item yn_moving.mkv dist\workspace

      - name: ls
        run: ls -R
      - name: rename dist and compress
        run: |
          Move-Item dist dandere2x_windows
          Compress-Archive -Path dandere2x_windows -destinationPath dandere2x_windows.zip
      - uses: actions/upload-artifact@v3
        with:
          name: dandere2x_windows
          path: dandere2x_windows.zip

  build_ubuntu:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install PyInstaller
        run: pip3 install pyinstaller
      - name: Pip install requirements
        run: pip3 install -r requirements.txt
      - name: Build to single executable
        run: |
          pyinstaller --onefile gui_driver.py
      - name: rename executable
        run: |
          mv dist/gui_driver dist/dandere2x
      - name: download waifu2x-ncnn-vulkan-server and move to dist\externals
        run: |
          ls -R
          wget https://github.com/akai-katto/waifu2x-ncnn-vulkan-server/releases/download/0.1.3/waifu2x-ncnn-vulkan-0.1.3-ubuntu.zip
          mkdir -p dist/externals/
          unzip waifu2x-ncnn-vulkan-0.1.3-ubuntu.zip
          mv waifu2x-ncnn-vulkan-0.1.3-ubuntu waifu2x-ncnn-vulkan-server
          mv waifu2x-ncnn-vulkan-server/ dist/externals/
          ls -R
      - name: copy config_files and gui_icons over
        run: |
          mv ./config_files/ dist/config_files/
          mkdir -p ./dist/gui/icons
          mv ./gui/icons dist/gui/
      - name: Download sample video and create workspace
        run: |
          wget https://github.com/akai-katto/dandere2x_externals_static/releases/download/0.02/yn_moving.mkv
          mkdir dist/workspace
          mv yn_moving.mkv dist/workspace

      - name: ls
        run: ls -R
      - name: rename 'dist' and compress
        run: |
          mv dist dandere2x_ubuntu
          zip -r dandere2x_ubuntu.zip dandere2x_ubuntu
      - uses: actions/upload-artifact@v3
        with:
          name: dandere2x_ubuntu
          path: dandere2x_ubuntu.zip

  build_macos:
    needs: generate_version_number
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install PyInstaller
        run: pip3 install pyinstaller
      - name: Pip install requirements
        run: pip3 install -r requirements.txt
      - name: Build to single executable
        run: |
          pyinstaller --onefile gui_driver.py
      - name: rename executable
        run: |
          mv dist/gui_driver dist/dandere2x
      - name: download waifu2x-ncnn-vulkan-server and move to dist\externals
        run: |
          ls -R
          wget https://github.com/akai-katto/waifu2x-ncnn-vulkan-server/releases/download/0.1.3/waifu2x-ncnn-vulkan-0.1.3-macos.zip
          mkdir -p dist/externals/
          unzip waifu2x-ncnn-vulkan-0.1.3-macos.zip
          mv waifu2x-ncnn-vulkan-0.1.3-macos waifu2x-ncnn-vulkan-server
          mv waifu2x-ncnn-vulkan-server/ dist/externals/
          ls -R
      - name: copy config_files and gui_icons over
        run: |
          mv ./config_files/ dist/config_files/
          mkdir -p ./dist/gui/icons
          mv ./gui/icons dist/gui/
      - name: copy over start script
        run: |
          mv ./bash_scripts/macos_start.sh  ./dist/dandere2x_start.sh
      - name: Copy instructions over
        run: |
          mv ./bash_scripts/macos_instructions.txt ./dist/macos_instructions.txt
      - name: Download sample video and create workspace
        run: |
          wget https://github.com/akai-katto/dandere2x_externals_static/releases/download/0.02/yn_moving.mkv
          mkdir dist/workspace
          mv yn_moving.mkv dist/workspace

      - name: ls
        run: ls -R
      - name: rename 'dist' and compress
        run: |
          mv dist dandere2x_macos
          zip -r dandere2x_macos.zip dandere2x_macos
      - uses: actions/upload-artifact@v3
        with:
          name: dandere2x_macos
          path: dandere2x_macos.zip


  release_github:
    needs: [
      generate_version_number,
      build_macos,
      build_windows,
      build_ubuntu]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/

    - name: Display structure of downloaded files
      run: |
        cd ./artifacts/
        ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        release_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        body: |
          ${{ github.event.head_commit.message }}
        draft: true
        prerelease: true
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        files: |
          ./artifacts/dandere2x_windows/dandere2x_windows.zip
          ./artifacts/dandere2x_macos/dandere2x_macos.zip
          ./artifacts/dandere2x_ubuntu/dandere2x_ubuntu.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}