name: GitHubActionsBuilds

on: push

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

  build_windows:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.9'
#      - name: Install PyInstaller
#        run: pip3 install pyinstaller
#      - name: Pip install requirements
#        run: pip3 install -r requirements.txt
#      - name: Build to single executable
#        run: |
#          pyinstaller --onefile gui_driver.py
      - name: make dist
        run: |
          mkdir dist
      - name: download waifu2x-ncnn-vulkan-server and move to dist\externals
        run: |
          Invoke-WebRequest -Uri https://github.com/akai-katto/waifu2x-ncnn-vulkan-server/releases/download/0.1.3/waifu2x-ncnn-vulkan-0.1.3-windows.zip -OutFile waifu2x-ncnn-vulkan.zip
          Expand-Archive waifu2x-ncnn-vulkan.zip -DestinationPath waifu2x-ncnn-vulkan
          ls -R 
          Move-Item D:\a\dandere2x-python-rework\dandere2x-python-rework\waifu2x-ncnn-vulkan\waifu2x-ncnn-vulkan-0.1.3-windows D:\a\dandere2x-python-rework\dandere2x-python-rework\dist\externals\
      - name: copy config_files over
        run: |
          Move-Item config_files\ dist\config_files\
      - name: ls
        run: ls -R
      - name: compress dist
        run: |
          Compress-Archive -Path dist -destinationPath dandere2x.zip
      - uses: actions/upload-artifact@v3
        with:
          name: dandere2x_windows
          path: dandere2x.zip

  release_github:
    needs: [
      generate_version_number,
      build_windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/

    - name: Display structure of downloaded files
      run: |
        cd ./artifacts/
        ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        release_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        body: |
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        files: |
          ./artifacts/dandere2x_windows/dandere2x.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}